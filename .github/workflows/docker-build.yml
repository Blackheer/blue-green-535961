name: Build and Deploy to GKE (Production)

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: production-cluster
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: app-production
  IMAGE: app-image
  REGISTRY_LOCATION: us-central1

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker ${{ env.REGISTRY_LOCATION }}-docker.pkg.dev

    - uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Build
      run: |-
        docker build \
          --tag "${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/container-example/${{ env.IMAGE }}:${{ github.sha }}" \
          --build-arg GITHUB_SHA="${{ github.sha }}" \
          --build-arg GITHUB_REF="${{ github.ref }}" \
          .

    - name: Push
      run: |-
        docker push "${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/container-example/${{ env.IMAGE }}:${{ github.sha }}"

    - name: Deploy
      run: |-
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
          app=${{ env.REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/container-example/${{ env.IMAGE }}:${{ github.sha }}
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
        kubectl get services -o wide
